# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Mininterface.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QWidget,QHBoxLayout,QTableWidget,QPushButton,QApplication,QVBoxLayout,QTableWidgetItem,QCheckBox,QAbstractItemView,QHeaderView,QLabel,QFrame
import Plates_DB
import resource2
import sqlite3


class Ui_mininterface(object):
    def __init__(self, rate_of_pay, spot_amount):
        super().__init__()

        Plates_DB.change_rate(rate_of_pay)

        self.spotsLeft = spot_amount
        self.currentSelectedPlate = ''
        self.currentSelectedPlate_white = ''
        self.currentSelectedPlate_black = ''
        self.currentSelectedPlateTime = ''
        self.currentSearchMode = 0
        self.currentSearchText = ''
        self.editable = True
        self.editable_white = True
        self.editable_black = True

        self.setupUi(self)
        self.my_sql(self.currentSearchMode)

    switch_window = QtCore.pyqtSignal()
    '''
        def __init__(self):
        super().__init__()
        self.setupUi()
        self.My_Sql()

    '''

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1254, 843)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(10, 120, 275, 561))
        self.label.setStyleSheet("border-image:url(:/images/images/evgeny-tchebotarev-aiwuLjLPFnU-unsplash.jpg);\n"
                                 "border-top-left-radius:30px;\n"
                                 "border-bottom-left-radius:30px;\n"
                                 "background-color: rgb(207, 207, 207);\n"
                                 "border-image: url(:/images/images/palo-kertys-aJGEVYOKE2Q-unsplash.jpg);")
        self.label.setText("")
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(280, 120, 711, 561))
        self.label_2.setStyleSheet("background-color: rgb(255, 255, 255);\n"
                                   "")
        self.label_2.setText("")
        self.label_2.setObjectName("label_2")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setGeometry(QtCore.QRect(20, 350, 251, 71))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(11)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.lineEdit_2.setFont(font)
        self.lineEdit_2.setStyleSheet("border:1px solid  rgb(0, 0, 0);\n"
                                      "border-radius:8px;")
        self.lineEdit_2.setText("")
        self.lineEdit_2.setReadOnly(False)
        self.lineEdit_2.setPlaceholderText("")
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(20, 190, 171, 31))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setStyleSheet("#label_3{\n"
                                   "    color: rgb(255, 255, 255);\n"
                                   "}")
        self.label_3.setTextFormat(QtCore.Qt.AutoText)
        self.label_3.setScaledContents(False)
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(20, 310, 171, 31))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.label_4.setFont(font)
        self.label_4.setStyleSheet("#label_4{\n"
                                   "    color: rgb(255, 255, 255);\n"
                                   "}")
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(20, 450, 171, 31))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.label_5.setFont(font)
        self.label_5.setStyleSheet("#label_5{\n"
                                   "    color: rgb(255, 255, 255);\n"
                                   "}")
        self.label_5.setObjectName("label_5")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(290, 140, 671, 441))
        self.tabWidget.setStyleSheet("background-color: rgb(255, 255, 255);\n"
                                     "font: 10pt \"黑体\";")
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.tableWidget = QtWidgets.QTableWidget(self.tab)
        self.tableWidget.setGeometry(QtCore.QRect(10, 10, 561, 401))
        self.tableWidget.setStyleSheet("background-color: rgb(230, 230, 230);")
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(0)
        self.tableWidget.setRowCount(0)
       # self.tableWidget.cellChanged.connect(self.cellchange) # 修改数据
       #  self.tableWidget.doubleClicked.connect(self.double_value)
        self.tableWidget.clicked.connect(self.double_value)
        self.tableWidget.itemChanged.connect(self.change_plate_name)
        self.pushButton_16 = QtWidgets.QPushButton(self.tab)
        self.pushButton_16.setGeometry(QtCore.QRect(580, 40, 75, 23))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.pushButton_16.setFont(font)
        self.pushButton_16.setStyleSheet("background-color: rgb(193, 193, 193);")
        self.pushButton_16.setObjectName("pushButton_16")
        self.pushButton_16.clicked.connect(self.mod_button)
        self.pushButton_17 = QtWidgets.QPushButton(self.tab)
        self.pushButton_17.setGeometry(QtCore.QRect(580, 80, 75, 23))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.pushButton_17.setFont(font)
        self.pushButton_17.setStyleSheet("background-color: rgb(193, 193, 193);")
        self.pushButton_17.setObjectName("pushButton_17")
        self.pushButton_17.clicked.connect(self.del_plate)  # 删除行
        self.pushButton_18 = QtWidgets.QPushButton(self.tab)
        self.pushButton_18.setGeometry(QtCore.QRect(580, 120, 75, 23))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.pushButton_18.setFont(font)
        self.pushButton_18.setStyleSheet("background-color: rgb(193, 193, 193);")
        self.pushButton_18.setObjectName("pushButton_18")
        self.pushButton_18.clicked.connect(self.add_plate_client)
        self.tabWidget.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.label_24 = QtWidgets.QLabel(self.tab_2)
        self.label_24.setGeometry(QtCore.QRect(120, 20, 61, 20))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.label_24.setFont(font)
        self.label_24.setObjectName("label_24")
        self.label_25 = QtWidgets.QLabel(self.tab_2)
        self.label_25.setGeometry(QtCore.QRect(480, 20, 54, 20))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.label_25.setFont(font)
        self.label_25.setObjectName("label_25")
        self.line_8 = QtWidgets.QFrame(self.tab_2)
        self.line_8.setGeometry(QtCore.QRect(320, 20, 21, 371))
        self.line_8.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_8.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_8.setObjectName("line_8")
        self.tableWidget_4 = QtWidgets.QTableWidget(self.tab_2)
        self.tableWidget_4.setGeometry(QtCore.QRect(20, 50, 271, 301))
        self.tableWidget_4.setStyleSheet("background-color: rgb(200, 200, 200);")
        self.tableWidget_4.setObjectName("tableWidget_4")
        self.tableWidget_4.setColumnCount(0)
        self.tableWidget_4.setRowCount(0)
        self.tableWidget_4.clicked.connect(self.double_value_white)
        self.tableWidget_4.itemChanged.connect(self.change_plate_name_white)
        self.tableWidget_5 = QtWidgets.QTableWidget(self.tab_2)
        self.tableWidget_5.setGeometry(QtCore.QRect(360, 50, 281, 301))
        self.tableWidget_5.setStyleSheet("background-color: rgb(200, 200, 200);")
        self.tableWidget_5.setObjectName("tableWidget_5")
        self.tableWidget_5.setColumnCount(0)
        self.tableWidget_5.setRowCount(0)
        self.tableWidget_5.clicked.connect(self.double_value_black)
        self.tableWidget_5.itemChanged.connect(self.change_plate_name_black)
        self.pushButton_19 = QtWidgets.QPushButton(self.tab_2)
        self.pushButton_19.setGeometry(QtCore.QRect(10, 370, 75, 23))
        self.pushButton_19.setStyleSheet("background-color: rgb(193, 193, 193);")
        self.pushButton_19.setObjectName("pushButton_19")
        self.pushButton_19.clicked.connect(self.mod_button_white)
        self.pushButton_20 = QtWidgets.QPushButton(self.tab_2)
        self.pushButton_20.setGeometry(QtCore.QRect(110, 370, 75, 23))
        self.pushButton_20.setStyleSheet("background-color: rgb(193, 193, 193);")
        self.pushButton_20.setObjectName("pushButton_20")
        self.pushButton_20.clicked.connect(self.del_plate_white)
        self.pushButton_21 = QtWidgets.QPushButton(self.tab_2)
        self.pushButton_21.setGeometry(QtCore.QRect(210, 370, 75, 23))
        self.pushButton_21.setStyleSheet("background-color: rgb(193, 193, 193);")
        self.pushButton_21.setObjectName("pushButton_21")
        self.pushButton_21.clicked.connect(self.add_plate_white_client)
        self.pushButton_22 = QtWidgets.QPushButton(self.tab_2)
        self.pushButton_22.setGeometry(QtCore.QRect(370, 370, 75, 23))
        self.pushButton_22.setStyleSheet("background-color: rgb(193, 193, 193);")
        self.pushButton_22.setObjectName("pushButton_22")
        self.pushButton_22.clicked.connect(self.mod_button_black)
        self.pushButton_23 = QtWidgets.QPushButton(self.tab_2)
        self.pushButton_23.setGeometry(QtCore.QRect(470, 370, 75, 23))
        self.pushButton_23.setStyleSheet("background-color: rgb(193, 193, 193);")
        self.pushButton_23.setObjectName("pushButton_23")
        self.pushButton_23.clicked.connect(self.del_plate_black)
        self.pushButton_24 = QtWidgets.QPushButton(self.tab_2)
        self.pushButton_24.setGeometry(QtCore.QRect(570, 370, 75, 23))
        self.pushButton_24.setStyleSheet("background-color: rgb(193, 193, 193);")
        self.pushButton_24.setObjectName("pushButton_24")
        self.pushButton_24.clicked.connect(self.add_plate_black_client)
        self.tabWidget.addTab(self.tab_2, "")
        self.lineEdit_4 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_4.setGeometry(QtCore.QRect(410, 600, 391, 51))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(11)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.lineEdit_4.setFont(font)
        self.lineEdit_4.setStyleSheet("border:1px solid  rgb(0, 0, 0);\n"
                                      "border-radius:8px;")
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.lineEdit_4.textChanged.connect(self.set_current_search_text)
        self.label_12 = QtWidgets.QLabel(self.centralwidget)
        self.label_12.setGeometry(QtCore.QRect(990, 120, 275, 561))
        self.label_12.setStyleSheet("border-image:url(:/images/images/evgeny-tchebotarev-aiwuLjLPFnU-unsplash.jpg);\n"
                                    "border-top-RIGHT-radius:30px;\n"
                                    "border-bottom-right-radius:30px;\n"
                                    "background-color: rgb(207, 207, 207);\n"
                                    "border-image: url(:/images/images/palo-kertys-aJGEVYOKE2Q-unsplash.jpg);")
        self.label_12.setText("")
        self.label_12.setObjectName("label_12")
        self.label_13 = QtWidgets.QLabel(self.centralwidget)
        self.label_13.setGeometry(QtCore.QRect(1000, 180, 171, 31))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.label_13.setFont(font)
        self.label_13.setStyleSheet("#label_13{\n"
                                    "    color: rgb(255, 255, 255);\n"
                                    "}")
        self.label_13.setTextFormat(QtCore.Qt.AutoText)
        self.label_13.setScaledContents(False)
        self.label_13.setObjectName("label_13")
        self.lineEdit_5 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_5.setGeometry(QtCore.QRect(1000, 220, 251, 71))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(11)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.lineEdit_5.setFont(font)
        self.lineEdit_5.setStyleSheet("border:1px solid  rgb(0, 0, 0);\n"
                                      "border-radius:8px;")
        self.lineEdit_5.setText("")
        self.lineEdit_5.setReadOnly(True)
        self.lineEdit_5.setPlaceholderText("")
        self.lineEdit_5.setObjectName("lineEdit_5")
        self.label_14 = QtWidgets.QLabel(self.centralwidget)
        self.label_14.setGeometry(QtCore.QRect(1000, 310, 171, 31))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.label_14.setFont(font)
        self.label_14.setStyleSheet("#label_14{\n"
                                    "    color: rgb(255, 255, 255);\n"
                                    "}")
        self.label_14.setObjectName("label_14")
        self.lineEdit_6 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_6.setGeometry(QtCore.QRect(1000, 360, 251, 71))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(11)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.lineEdit_6.setFont(font)
        self.lineEdit_6.setStyleSheet("border:1px solid  rgb(0, 0, 0);\n"
                                      "border-radius:8px;")
        self.lineEdit_6.setReadOnly(True)
        self.lineEdit_6.setPlaceholderText("")
        self.lineEdit_6.setObjectName("lineEdit_6")
        self.label_15 = QtWidgets.QLabel(self.centralwidget)
        self.label_15.setGeometry(QtCore.QRect(1000, 460, 171, 31))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.label_15.setFont(font)
        self.label_15.setStyleSheet("#label_15{\n"
                                    "    color: rgb(255, 255, 255);\n"
                                    "}")
        self.label_15.setObjectName("label_15")
        self.label_16 = QtWidgets.QLabel(self.centralwidget)
        self.label_16.setGeometry(QtCore.QRect(150, 130, 121, 31))
        self.label_16.setStyleSheet("#label_16{\n"
                                    "    text-decoration: underline;\n"
                                    "    font: 16pt \"黑体\";\n"
                                    "    color: rgb(255, 255, 255);\n"
                                    "}")
        self.label_16.setObjectName("label_16")
        self.label_17 = QtWidgets.QLabel(self.centralwidget)
        self.label_17.setGeometry(QtCore.QRect(1000, 120, 131, 41))
        self.label_17.setStyleSheet("#label_17{\n"
                                    "    text-decoration: underline;\n"
                                    "    font: 16pt \"黑体\";\n"
                                    "    color: rgb(255, 255, 255);\n"
                                    "}")
        self.label_17.setObjectName("label_17")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(300, 610, 41, 41))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("#pushButton{\n"
                                      "    background-color: rgb(190, 190, 190);\n"
                                      "    color: rgb(0, 0, 0);\n"
                                      "    border:3px solid rgb(0,0,0);\n"
                                      "    border-radius:8px;\n"
                                      "}\n"
                                      "#pushButton:hover{\n"
                                      "    background-color: rgb(255, 255, 255);\n"
                                      "    color: rgb(0, 0, 0);\n"
                                      "}\n"
                                      "#pushButton:pressed{\n"
                                      "    padding-top:5px;\n"
                                      "    padding-left:5px;\n"
                                      "\n"
                                      "}")
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.add_plate_from_anpr) # 增加行
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(350, 610, 41, 41))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setStyleSheet("#pushButton_2{\n"
                                        "    background-color: rgb(190, 190, 190);\n"
                                        "    color: rgb(0, 0, 0);\n"
                                        "    border:3px solid rgb(0,0,0);\n"
                                        "    border-radius:8px;\n"
                                        "}\n"
                                        "#pushButton_2:hover{\n"
                                        "    background-color: rgb(255, 255, 255);\n"
                                        "    color: rgb(0, 0, 0);\n"
                                        "}\n"
                                        "#pushButton_2:pressed{\n"
                                        "    padding-top:5px;\n"
                                        "    padding-left:5px;\n"
                                        "\n"
                                        "}")
        self.pushButton_2.setObjectName("pushButton_2")
        self.lineEdit_12 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_12.setGeometry(QtCore.QRect(20, 230, 251, 71))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(11)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.lineEdit_12.setFont(font)
        self.lineEdit_12.setStyleSheet("border:1px solid  rgb(0, 0, 0);\n"
                                       "border-radius:8px;")
        self.lineEdit_12.setText("")
        self.lineEdit_12.setReadOnly(True)
        self.lineEdit_12.setPlaceholderText("")
        self.lineEdit_12.setObjectName("lineEdit_12")
        self.pushButton_12 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_12.setGeometry(QtCore.QRect(960, 120, 31, 31))
        self.pushButton_12.setStyleSheet("border:none;\n"
                                         "border-image: url(:/icon/icons/close.png);")
        self.pushButton_12.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/icons/icons/close.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_12.setIcon(icon)
        self.pushButton_12.setObjectName("pushButton_12")
        self.pushButton_13 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_13.setGeometry(QtCore.QRect(870, 610, 41, 41))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_13.setFont(font)
        self.pushButton_13.setStyleSheet("#pushButton_13{\n"
                                         "    background-color: rgb(190, 190, 190);\n"
                                         "    color: rgb(0, 0, 0);\n"
                                         "    border:3px solid rgb(0,0,0);\n"
                                         "    border-radius:8px;\n"
                                         "}\n"
                                         "#pushButton_13:hover{\n"
                                         "    background-color: rgb(255, 255, 255);\n"
                                         "    color: rgb(0, 0, 0);\n"
                                         "}\n"
                                         "#pushButton_13:pressed{\n"
                                         "    padding-top:5px;\n"
                                         "    padding-left:5px;\n"
                                         "\n"
                                         "}")
        self.pushButton_13.setObjectName("pushButton_13")
        self.pushButton_13.clicked.connect(self.driver_paid)
        self.pushButton_14 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_14.setGeometry(QtCore.QRect(920, 610, 41, 41))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_14.setFont(font)
        self.pushButton_14.setStyleSheet("#pushButton_14{\n"
                                         "    background-color: rgb(190, 190, 190);\n"
                                         "    color: rgb(0, 0, 0);\n"
                                         "    border:3px solid rgb(0,0,0);\n"
                                         "    border-radius:8px;\n"
                                         "}\n"
                                         "#pushButton_14:hover{\n"
                                         "    background-color: rgb(255, 255, 255);\n"
                                         "    color: rgb(0, 0, 0);\n"
                                         "}\n"
                                         "#pushButton_14:pressed{\n"
                                         "    padding-top:5px;\n"
                                         "    padding-left:5px;\n"
                                         "\n"
                                         "}")
        self.pushButton_14.setObjectName("pushButton_14")
        self.pushButton_15 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_15.setGeometry(QtCore.QRect(820, 610, 41, 41))
        self.pushButton_15.setStyleSheet("border-image: url(:/icons/icons/search.png);")
        self.pushButton_15.setText("")
        self.pushButton_15.setObjectName("pushButton_15")
        self.pushButton_15.clicked.connect(self.set_current_search_text)
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(20, 480, 241, 181))
        self.label_6.setStyleSheet("background-color: rgb(255, 255, 255);\n"
                                   "border:1px solid  rgb(0, 0, 0);\n"
                                   "border-radius:8px;")
        self.label_6.setText("")
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(1000, 490, 241, 181))
        self.label_7.setStyleSheet("background-color: rgb(255, 255, 255);\n"
                                   "border:1px solid  rgb(0, 0, 0);\n"
                                   "border-radius:8px;")
        self.label_7.setText("")
        self.label_7.setObjectName("label_7")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        # self.pushButton_12.clicked.connect(MainWindow.close)
        self.pushButton_12.clicked.connect(self.end_signal)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self._translate = QtCore.QCoreApplication.translate

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label_3.setText(_translate("MainWindow", "剩余车位："))
        self.label_4.setText(_translate("MainWindow", "车牌："))
        self.label_5.setText(_translate("MainWindow", "LIVE_Picture："))
        self.pushButton_16.setText(_translate("MainWindow", "可以编辑"))
        self.pushButton_17.setText(_translate("MainWindow", "删除"))
        self.pushButton_18.setText(_translate("MainWindow", "新增"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "场内车辆"))
        self.label_24.setText(_translate("MainWindow", "白名单"))
        self.label_25.setText(_translate("MainWindow", "黑名单"))
        self.pushButton_19.setText(_translate("MainWindow", "可以编辑"))
        self.pushButton_20.setText(_translate("MainWindow", "删除"))
        self.pushButton_21.setText(_translate("MainWindow", "新增"))
        self.pushButton_22.setText(_translate("MainWindow", "可以编辑"))
        self.pushButton_23.setText(_translate("MainWindow", "删除"))
        self.pushButton_24.setText(_translate("MainWindow", "新增"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "车牌管理"))
        self.lineEdit_4.setPlaceholderText(_translate("MainWindow", "搜索："))
        self.label_13.setText(_translate("MainWindow", "应缴费用："))
        self.label_14.setText(_translate("MainWindow", "车牌："))
        self.label_15.setText(_translate("MainWindow", "LIVE_Picture："))
        self.label_16.setText(_translate("MainWindow", "入场显示"))
        self.label_17.setText(_translate("MainWindow", "出场显示"))
        self.pushButton.setText(_translate("MainWindow", "开"))
        self.pushButton_2.setText(_translate("MainWindow", "关"))
        self.pushButton_13.setText(_translate("MainWindow", "开"))
        self.pushButton_14.setText(_translate("MainWindow", "关"))

    def double_value(self):
        '''
         作用：单击事件监听，显示被选中的单元格
        '''
        # 打印被选中的单元格
        for i in self.tableWidget.selectedItems():
            if i.column() == 0:
                self.currentSelectedPlate = i.text()
                print(self.currentSelectedPlate)
                self.currentSelectedPlateTime = self.tableWidget.item(i.row(), 1).text()
                print(self.currentSelectedPlateTime)

    def double_value_white(self):
        for i in self.tableWidget_4.selectedItems():
            self.currentSelectedPlate_white = i.text()
            print(self.currentSelectedPlate_white)

    def double_value_black(self):

        for i in self.tableWidget_5.selectedItems():
            self.currentSelectedPlate_black = i.text()
            print(self.currentSelectedPlate_black)

    def add_plate_from_anpr(self):
        self.add_plate(self.lineEdit_2.text())
        self.spotsLeft -= 1
        self.lineEdit_12.setText(self.spotsLeft)

    def add_plate(self, plate=''):
        Plates_DB.add_plate_ui(plate)
        self.my_sql(self.currentSearchMode)

    def add_plate_client(self):
        self.add_plate('')

    def add_plate_white(self, plate=''):
        in_lists = Plates_DB.query_lists(plate, 2)
        if in_lists == 0:
            Plates_DB.add_whitelist(plate)
        self.my_sql(self.currentSearchMode)

    def add_plate_white_client(self):
        self.add_plate_white('')

    def add_plate_black(self, plate=''):
        in_lists = Plates_DB.query_lists(plate, 1)
        if in_lists == 0:
            Plates_DB.add_blacklist(plate)
        self.my_sql(self.currentSearchMode)

    def add_plate_black_client(self):
        self.add_plate_black('')

    def del_plate(self):
        Plates_DB.delete_plate_ui(self.currentSelectedPlate, self.currentSelectedPlateTime)
        self.my_sql(self.currentSearchMode)

    def del_plate_white(self):
        Plates_DB.delete_whitelist(self.currentSelectedPlate_white)
        self.my_sql(self.currentSearchMode)

    def del_plate_black(self):
        Plates_DB.delete_blacklist(self.currentSelectedPlate_black)
        self.my_sql(self.currentSearchMode)

    def set_current_search_text(self):
        self.currentSearchText = self.lineEdit_4.text()
        if self.currentSearchText == '':
            self.currentSearchMode = 0
        else:
            self.currentSearchMode = 1
        self.my_sql(self.currentSearchMode)

    def table_data(self, i, j, data):
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(i, j, item)
        item = self.tableWidget.item(i, j)
        item.setText(self._translate("Form", str(data)))

    def table_data_white(self, i, j, data):
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_4.setItem(i, j, item)
        item = self.tableWidget_4.item(i, j)
        item.setText(self._translate("Form", str(data)))

    def table_data_black(self, i, j, data):
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_5.setItem(i, j, item)
        item = self.tableWidget_5.item(i, j)
        item.setText(self._translate("Form", str(data)))

    def change_plate_name(self):
        for i in self.tableWidget.selectedItems():
            if i.column() == 0:
                if i.text() != self.currentSelectedPlate_white:
                    print("change name called, changed is: "+i.text())
                    changed_plate = i.text()
                    Plates_DB.adjust_plate_number(self.currentSelectedPlate, changed_plate, self.currentSelectedPlateTime)
                    self.currentSelectedPlate = i.text()
            self.my_sql(self.currentSearchMode)

    def change_plate_name_white(self):
        for i in self.tableWidget_4.selectedItems():
            if i.text() != self.currentSelectedPlate_white:
                if Plates_DB.query_lists(i.text()) == 0:
                    print("whitelist changed at: "+i.text())
                    changed_plate = i.text()
                    Plates_DB.adjust_whitelist(self.currentSelectedPlate_white, changed_plate)
                    self.currentSelectedPlate_white = i.text()
        self.my_sql(self.currentSearchMode)

    def change_plate_name_black(self):
        for i in self.tableWidget_5.selectedItems():
            if i.text() != self.currentSelectedPlate_black:
                if Plates_DB.query_lists(i.text()) == 0:
                    print("blacklist changed at: "+i.text())
                    changed_plate = i.text()
                    Plates_DB.adjust_blacklist(self.currentSelectedPlate_black, changed_plate)
                    self.currentSelectedPlate_black = i.text()
        self.my_sql(self.currentSearchMode)

    def mod_button(self):
        if self.editable:
            self.tableWidget.setEditTriggers(QAbstractItemView.NoEditTriggers)
            self.pushButton_16.setText('禁止编辑')
            self.editable = False
        else:
            self.tableWidget.setEditTriggers(QAbstractItemView.AllEditTriggers)
            self.pushButton_16.setText('可以编辑')
            self.editable = True

    def mod_button_white(self):
        if self.editable_white:
            self.tableWidget_4.setEditTriggers(QAbstractItemView.NoEditTriggers)
            self.pushButton_19.setText('禁止编辑')
            self.editable_white = False
        else:
            self.tableWidget_4.setEditTriggers(QAbstractItemView.AllEditTriggers)
            self.pushButton_19.setText('可以编辑')
            self.editable_white = True

    def mod_button_black(self):
        if self.editable_black:
            self.tableWidget_5.setEditTriggers(QAbstractItemView.NoEditTriggers)
            self.pushButton_22.setText('禁止编辑')
            self.editable_black = False
        else:
            self.tableWidget_5.setEditTriggers(QAbstractItemView.AllEditTriggers)
            self.pushButton_22.setText('可以编辑')
            self.editable_black = True

    def my_sql(self, mode):
        '''
        mode = default will display all
        mode = 1 > search result
        '''
        # display info to user interface according to mode
        if mode == 1:
            self.display_page(Plates_DB.query_plate_ui(self.currentSearchText))
            self.display_page_bnw(Plates_DB.query_whitelist(self.currentSearchText),
                                  Plates_DB.query_blacklist(self.currentSearchText))
        else:
            self.display_page(Plates_DB.display_ui())
            self.display_page_bnw(Plates_DB.display_whitelist(), Plates_DB.display_blacklist())

    def display_page(self, sql_display):
        # connect to plates database
        col = 4
        conn = sqlite3.connect('plates.db')
        cur = conn.cursor()

        cur.execute(sql_display)
        total = cur.fetchall()
        col_result = cur.description

        row = len(total)
        # col = len(total[0])# 取得字段数，用于设置表格的列数
        col_result = list(col_result)
        a = 0

        self.tableWidget.setColumnCount(col)
        self.tableWidget.setRowCount(row)

        self.tableWidget.blockSignals(True)

        for i in col_result:  # 设置表头信息，将mysql数据表中的表头信息拿出来，放进TableWidget中
            item = QtWidgets.QTableWidgetItem()
            self.tableWidget.setHorizontalHeaderItem(a, item)
            item = self.tableWidget.horizontalHeaderItem(a)
            item.setText(self._translate("Form", i[0]))
            a = a + 1

        if row > 0:
            total = list(total)  # 将数据格式改为列表形式，其是将数据库中取出的数据整体改为列表形式
            for i in range(len(total)):  # 将相关的数据
                total[i] = list(total[i])  # 将获取的数据转为列表形式

            for i in range(row):
                for j in range(col):
                    # print(f"{i},{j}")
                    self.table_data(i, j, total[i][j])

        self.tableWidget.blockSignals(False)

        cur.close()
        conn.close()

    def display_page_white(self, sql_display):
        # connect to plates database
        col = 1
        conn = sqlite3.connect('plates.db')
        cur = conn.cursor()

        cur.execute(sql_display)
        total = cur.fetchall()
        col_result = cur.description

        row = len(total)
        # col = len(total[0])# 取得字段数，用于设置表格的列数
        col_result = list(col_result)
        a = 0

        self.tableWidget_4.setColumnCount(col)
        self.tableWidget_4.setRowCount(row)

        self.tableWidget_4.blockSignals(True)

        for i in col_result:  # 设置表头信息，将mysql数据表中的表头信息拿出来，放进TableWidget中
            item = QtWidgets.QTableWidgetItem()
            self.tableWidget_4.setHorizontalHeaderItem(a, item)
            item = self.tableWidget_4.horizontalHeaderItem(a)
            item.setText(self._translate("Form", i[0]))
            a = a + 1

        if row > 0:
            total = list(total)  # 将数据格式改为列表形式，其是将数据库中取出的数据整体改为列表形式
            for i in range(len(total)):  # 将相关的数据
                total[i] = list(total[i])  # 将获取的数据转为列表形式

            for i in range(row):
                for j in range(col):
                    # print(f"{i},{j}")
                    self.table_data_white(i, j, total[i][j])

        self.tableWidget_4.blockSignals(False)

        cur.close()
        conn.close()

    def display_page_black(self, sql_display):
        # connect to plates database
        col = 1
        conn = sqlite3.connect('plates.db')
        cur = conn.cursor()

        cur.execute(sql_display)
        total = cur.fetchall()
        col_result = cur.description

        row = len(total)
        # col = len(total[0])# 取得字段数，用于设置表格的列数
        col_result = list(col_result)
        a = 0

        self.tableWidget_5.setColumnCount(col)
        self.tableWidget_5.setRowCount(row)

        self.tableWidget_5.blockSignals(True)

        for i in col_result:  # 设置表头信息，将mysql数据表中的表头信息拿出来，放进TableWidget中
            item = QtWidgets.QTableWidgetItem()
            self.tableWidget_5.setHorizontalHeaderItem(a, item)
            item = self.tableWidget_5.horizontalHeaderItem(a)
            item.setText(self._translate("Form", i[0]))
            a = a + 1

        if row > 0:
            total = list(total)  # 将数据格式改为列表形式，其是将数据库中取出的数据整体改为列表形式
            for i in range(len(total)):  # 将相关的数据
                total[i] = list(total[i])  # 将获取的数据转为列表形式

            for i in range(row):
                for j in range(col):
                    # print(f"{i},{j}")
                    self.table_data_black(i, j, total[i][j])

        self.tableWidget_5.blockSignals(False)

        cur.close()
        conn.close()

    def display_page_bnw(self, sql_display_white, sql_display_black):
        self.display_page_white(sql_display_white)
        self.display_page_black(sql_display_black)

    def driver_paid(self):
        self.spotsLeft += 1
        self.lineEdit_12.setText(self.spotsLeft)
        self.lineEdit_5.clear()

    def end_signal(self):
        self.switch_window.emit()
